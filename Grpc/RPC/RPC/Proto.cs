// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from proto.proto</summary>
  public static partial class ProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for proto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtwcm90by5wcm90bxIFcHJvdG8iMwoGQ29tYW5kEg0KBWNoYXZlGAEgASgF",
            "Eg0KBXZhbG9yGAIgASgJEgsKA2NtZBgDIAEoBSIcCghSZXNwb3N0YRIQCght",
            "ZW5zYWdlbRgBIAEoCTKRAQoDUlBDEisKB0NvbWFuZG8SDS5wcm90by5Db21h",
            "bmQaDy5wcm90by5SZXNwb3N0YSIAEiwKBkxpc3RhchINLnByb3RvLkNvbWFu",
            "ZBoPLnByb3RvLlJlc3Bvc3RhIgAwARIvCglNb25pdG9yYXISDS5wcm90by5D",
            "b21hbmQaDy5wcm90by5SZXNwb3N0YSIAMAFCNgobaW8uZ3JwYy5leGFtcGxl",
            "cy5oZWxsb3dvcmxkQg9IZWxsb1dvcmxkUHJvdG9QAaICA0hMV2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Comand), global::Proto.Comand.Parser, new[]{ "Chave", "Valor", "Cmd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Resposta), global::Proto.Resposta.Parser, new[]{ "Mensagem" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class Comand : pb::IMessage<Comand> {
    private static readonly pb::MessageParser<Comand> _parser = new pb::MessageParser<Comand>(() => new Comand());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Comand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comand(Comand other) : this() {
      chave_ = other.chave_;
      valor_ = other.valor_;
      cmd_ = other.cmd_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Comand Clone() {
      return new Comand(this);
    }

    /// <summary>Field number for the "chave" field.</summary>
    public const int ChaveFieldNumber = 1;
    private int chave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chave {
      get { return chave_; }
      set {
        chave_ = value;
      }
    }

    /// <summary>Field number for the "valor" field.</summary>
    public const int ValorFieldNumber = 2;
    private string valor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Valor {
      get { return valor_; }
      set {
        valor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 3;
    private int cmd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Comand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Comand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chave != other.Chave) return false;
      if (Valor != other.Valor) return false;
      if (Cmd != other.Cmd) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chave != 0) hash ^= Chave.GetHashCode();
      if (Valor.Length != 0) hash ^= Valor.GetHashCode();
      if (Cmd != 0) hash ^= Cmd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Chave != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chave);
      }
      if (Valor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Valor);
      }
      if (Cmd != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cmd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chave != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chave);
      }
      if (Valor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Valor);
      }
      if (Cmd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Comand other) {
      if (other == null) {
        return;
      }
      if (other.Chave != 0) {
        Chave = other.Chave;
      }
      if (other.Valor.Length != 0) {
        Valor = other.Valor;
      }
      if (other.Cmd != 0) {
        Cmd = other.Cmd;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Chave = input.ReadInt32();
            break;
          }
          case 18: {
            Valor = input.ReadString();
            break;
          }
          case 24: {
            Cmd = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings
  /// </summary>
  public sealed partial class Resposta : pb::IMessage<Resposta> {
    private static readonly pb::MessageParser<Resposta> _parser = new pb::MessageParser<Resposta>(() => new Resposta());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resposta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resposta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resposta(Resposta other) : this() {
      mensagem_ = other.mensagem_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resposta Clone() {
      return new Resposta(this);
    }

    /// <summary>Field number for the "mensagem" field.</summary>
    public const int MensagemFieldNumber = 1;
    private string mensagem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mensagem {
      get { return mensagem_; }
      set {
        mensagem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resposta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resposta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mensagem != other.Mensagem) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mensagem.Length != 0) hash ^= Mensagem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mensagem.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mensagem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mensagem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mensagem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resposta other) {
      if (other == null) {
        return;
      }
      if (other.Mensagem.Length != 0) {
        Mensagem = other.Mensagem;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Mensagem = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
